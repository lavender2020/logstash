input { 
	file { 
		path => "/home/logs/apps/*/*.log" exclude => ["*.*.*.log"] 
		type => app_log 
		start_position => beginning 
		ignore_older => 1 
		codec => multiline { pattern => "^\["   negate => true  what => "previous" } 
	} 

	file { 
		path => "/home/logs/nginx/*/access.log" 
		type => ocs_nginx_log 
		ignore_older => 1 
		codec => "json" 
	}   

	file {
		path => "/home/logs/nginx/*/error.log" 
		type => "nginx_error_log" 
		ignore_older => 1 
		codec => "json"
	} 
	
	file { 
		path => "/home/logs/nginx_h5player/access.log" 
		type => nginx_ocs_h5player 
		ignore_older => 1 
		codec => "json" 
	}   
        
  file {
    type => "hj-lms-metadata-job"
    path => "/home/logs/metadata_job/logstash/logstash.log"
    codec => multiline {
      pattern => "^(\[DEBUG|\[WARN|\[ERROR|\[INFO|\[FATAL)"
      negate => true
      what => previous
    }
  }	
}  

filter { 
	if [type] == "app_log" { 
		grok { match => ["message","\[%{TIMESTAMP_ISO8601:timestamp}\]\[%{USERNAME:appName}\]\[%{IP:node_ip}\:%{NUMBER:node_port}\]\[(\s)?%{LOGLEVEL:level}\]\[%{DATA:class}\] %{GREEDYDATA:message}"] overwrite => ["message","timestamp"] } 
		date { match => ["timestamp","yyyy-MM-dd HH:mm:ss,SSS"] remove_field => ["timestamp"] } 
	} 
	else if [type] == "nginx_error_log" { 
		grok { 
                    match => {"message"  => "(?<timestamp>%{YEAR}\[./-\]%{MONTHNUM}\[./-\]%{MONTHDAY}\[- \]%{TIME}) \[%{LOGLEVEL}\] %{POSINT:pid}#%{NUMBER:tid}: \*%{NUMBER:CID} %{GREEDYDATA:errormessage}"}
         }
  }
  else if [type] == "hj-lms-metadata-job" {
    grok {
                    match => ["message", "(?m)\[%{LOGLEVEL:level}\] \[%{TIMESTAMP_ISO8601:timestamp}\] \[%{DATA:logger}\] \[%{DATA:threadId}\] \[%{DATA:class}\] \[%{DATA:requestId}\] \[%{DATA:srv_ip}\] %{GREEDYDATA:msgRawData}"]
         }
    date {
                    match => ["timestamp","yyyy-MM-dd HH:mm:ss,SSS"]
         }
    mutate {
                    remove_field => [ "timestamp", "message", "path", "tags" ]
           }
  } 
} 

output { 
	if [type] == "app_log" { 
		kafka { 
                    bootstrap_servers => "10.10.50.86:9092,10.10.50.87:9092,10.10.50.88:9092" 
                    topic_id => "ocs-api" 
                } 
	}
	else if [type] == "nginx_error_log" { 
		kafka {
                    bootstrap_servers => "10.10.50.57:9092" 
                    topic_id => "nginx-error-json"
                }
	} 
        else if [type] == "hj-lms-metadata-job" {
                kafka {
                    bootstrap_servers => "10.10.50.86:9092,10.10.50.87:9092,10.10.50.88:9092"
                    topic_id => "lms"
                }
        }
	else {
		kafka { bootstrap_servers => "10.10.50.57:9092" topic_id => "nginx-json" } 
	} 
}
